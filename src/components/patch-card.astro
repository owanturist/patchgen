---
import type { Patch } from "~/tools/patch"
import SewButton from "~/components/sew-button.astro"
import Hourglass from "~/components/hourglass.astro"

export interface Props {
  class?: string
  patch: Patch
}

const { class: className, patch } = Astro.props

const width = Math.max(...patch.tiles.map((row) => row.length))
---

<div class:list={["p-6 bg-gray-100 rounded", className]}>
  <div
    class="grid col-span-full grid-cols-subgrid gap-px justify-center"
    style={{
      gridTemplateColumns: `repeat(${width}, minmax(0, max-content))`,
    }}
  >
    {
      patch.tiles.flatMap((row, rowIndex) => {
        return row.map((tile, colIndex) => {
          if (tile === 0) {
            return null
          }

          return (
            <div
              class="bg-gray-300 ring-1 w-20 aspect-square flex justify-center items-center"
              style={{
                gridColumnStart: colIndex + 1,
                gridRowStart: rowIndex + 1,
              }}
            >
              {tile === 2 && <SewButton class="size-3/5" />}
            </div>
          )
        })
      })
    }
  </div>

  <div class="mt-6 flex justify-center gap-6 text-4xl tabular-nums">
    <p class="flex items-center gap-2 text-blue-400">
      {patch.price}<SewButton outlined class="size-8" />
    </p>

    <p class="flex items-center gap-2 text-amber-900">
      {patch.time}<Hourglass class="size-8" />
    </p>
  </div>
</div>
